name: Release Debian repository

on:
  workflow_dispatch:

defaults:
  run:
    shell: bash

jobs:
  release:
    name: Release Debian repository
    runs-on: ubuntu-latest
    steps:
        - name: Install dependencies
          run: |
            sudo apt-get update
            sudo apt-get install -y dpkg-dev apt-utils gpg sshfs

        - name: Add ssh key to agent
          run: |
            ssh-agent -a $SSH_AUTH_SOCK > /dev/null
            echo '#!/bin/sh' > ~/.ssh_askpass
            echo 'echo $SSH_PASSPHRASE' >> ~/.ssh_askpass && chmod +x ~/.ssh_askpass
            echo "$SSH_PRIVATE_KEY" | tr -d '\r' | DISPLAY=None SSH_ASKPASS=~/.ssh_askpass ssh-add - >/dev/null
          env:
            SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
            SSH_PASSPHRASE: ${{ secrets.SSH_PASSPHRASE }}
            SSH_AUTH_SOCK: /tmp/ssh_agent.sock

        - name: Print ssh identities
          run: ssh-add -l
          env:
            SSH_AUTH_SOCK: /tmp/ssh_agent.sock

        - name: Import GPG key
          uses: crazy-max/ghaction-import-gpg@v6.3.0
          with:
            gpg_private_key: ${{ secrets.ORG_GPG_PRIVATE_KEY }}
            passphrase: ${{ secrets.ORG_GPG_PASSPHRASE }}
            fingerprint: "C09537EDCF795D136EA8CB50829768EDD9BD8B8F"
            trust_level: 5

        - name: Copy repository contents from eclipse.org
          run: |
            rsync -avzP -e 'ssh -o StrictHostKeyChecking=no' ${SSH_HOST}:${SSH_HOST_PATH}/ debian-repo/
          env:
            SSH_HOST: genie.zenoh@projects-storage.eclipse.org
            SSH_HOST_PATH: /home/data/httpd/download.eclipse.org/zenoh/debian-repo
            SSH_AUTH_SOCK: /tmp/ssh_agent.sock

        - name: Generate Packages and Release files
          run: |
            apt-ftparchive packages debian-repo > debian-repo/Packages
            if [ "${ACTION_STEP_DEBUG}" == "true" ]; then
              echo "Packages file contents:"
              cat debian-repo/Packages
            fi
            rsync -avzP -e 'ssh -o StrictHostKeyChecking=no' debian-repo/Packages "${SSH_HOST}":"${SSH_HOST_PATH}"/Packages
            gzip -c9 debian-repo/Packages > debian-repo/Packages.gz
            rsync -avzP -e 'ssh -o StrictHostKeyChecking=no' debian-repo/Packages.gz "${SSH_HOST}":"${SSH_HOST_PATH}"/Packages.gz
            apt-ftparchive release debian-repo > debian-repo/Release
            if [ "${ACTION_STEP_DEBUG}" == "true" ]; then
              echo "Release file contents:"
              cat debian-repo/Release
            fi
            rsync -avzP -e 'ssh -o StrictHostKeyChecking=no' debian-repo/Release "${SSH_HOST}":"${SSH_HOST_PATH}"/Release
            gpg --batch --armor --sign --detach-sign --output debian-repo/Release.gpg debian-repo/Release
            if [ "${ACTION_STEP_DEBUG}" == "true" ]; then
              echo "Release.gpg file contents:"
              cat debian-repo/Release.gpg
            fi
            rsync -avzP -e 'ssh -o StrictHostKeyChecking=no' debian-repo/Release.gpg "${SSH_HOST}":"${SSH_HOST_PATH}"/Release.gpg
            gpg --armor --export "${GPG_SUBKEY_ID}" > debian-repo/zenoh-public-key
            if [ "${ACTION_STEP_DEBUG}" == "true" ]; then
              echo "Public key contents"
              cat debian-repo/zenoh-public-key
            fi
            rsync -avzP -e 'ssh -o StrictHostKeyChecking=no' debian-repo/zenoh-public-key "${SSH_HOST}":"${SSH_HOST_PATH}"/zenoh-public-key
          env:
            GPG_SUBKEY_ID: ${{ secrets.ORG_GPG_SUBKEY_ID }}
            SSH_HOST: genie.zenoh@projects-storage.eclipse.org
            SSH_HOST_PATH: /home/data/httpd/download.eclipse.org/zenoh/debian-repo
            SSH_AUTH_SOCK: /tmp/ssh_agent.sock