name: Release crates (DockerHub)

on:
  workflow_call:
    inputs:
      live-run:
        type: string
        required: true
      repo:
        type: string
        required: true
      version:
        type: string
        required: true
      branch:
        type: string
        required: false
      binary:
        type: string
        required: true
      files:
        type: string
        required: true
      platforms:
        type: string
        required: true
      image:
        type: string
        required: true
      licenses:
        type: string
        required: true
      no-build:
        type: boolean
        required: false
        default: false
  workflow_dispatch:
    inputs:
      live-run:
        type: string
        required: true
      repo:
        type: string
        required: true
      version:
        type: string
        required: true
      branch:
        type: string
        required: false
      binary:
        type: string
        required: true
      files:
        type: string
        required: true
      platforms:
        type: string
        required: true
      image:
        type: string
        required: true
      licenses:
        type: string
        required: true
      no-build:
        type: boolean
        required: false
        default: false

jobs:
  build:
    if: ${{ !inputs.no-build }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target: [x86_64-unknown-linux-musl, aarch64-unknown-linux-musl]
    steps:
      - uses: eclipse-zenoh/ci/build-crates-standalone@main
        with:
          repo: ${{ inputs.repo }}
          version: ${{ inputs.version }}
          branch: ${{ inputs.branch }}
          target: ${{ matrix.target }}
          artifact-patterns: ${{ inputs.files }}
          github-token: ${{ secrets.BOT_WORKFLOW_TOKEN }}

  publish:
    if: always()
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: eclipse-zenoh/ci/publish-crates-docker@main
        with:
          repo: ${{ inputs.repo }}
          version: ${{ inputs.version }}
          live-run: ${{ inputs.live-run }}
          files: ${{ inputs.files }}
          binary: ${{ inputs.binary }}
          platforms: ${{ inputs.platforms }}
          image: ${{ inputs.image }}
          licenses: ${{ inputs.licenses }}
          username: ${{ secrets.DOCKER_COM_USERNAME }}
          password: ${{ secrets.DOCKER_COM_PASSWORD }}
